@model IEnumerable<MedService.Models.Specialization>

@{
    ViewData["Title"] = "Specializations Distribution";
}

<h1>Specializations Distribution</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.SpecializationName)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.SpecializationName)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.SpecializationId">Edit</a> |
                    <a asp-action="Delete" asp-route-id="@item.SpecializationId">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<h2>Specializations Distribution Pie Chart</h2>
<div style="width: 400px; height: 400px;">
    <canvas id="specializationPieChart"></canvas>
</div>

<h2>Specializations Distribution Bar Chart</h2>
<div style="width: 600px; height: 400px;">
    <canvas id="specializationBarChart"></canvas>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        async function loadChartData() {
            const response = await fetch('/api/Diagram2/specializationDistribution');
            const data = await response.json();

            const labels = data.map(item => item.specializationName);
            const counts = data.map(item => item.count);

            // Pie Chart
            const pieCtx = document.getElementById('specializationPieChart').getContext('2d');
            new Chart(pieCtx, {
                type: 'pie',
                data: {
                    labels: labels,
                    datasets: [{
                        label: 'Doctors per Specialization',
                        data: counts,
                        backgroundColor: [
                            'rgba(255, 99, 132, 0.2)',
                            'rgba(54, 162, 235, 0.2)',
                            'rgba(255, 206, 86, 0.2)',
                            'rgba(75, 192, 192, 0.2)',
                            'rgba(153, 102, 255, 0.2)',
                            'rgba(255, 159, 64, 0.2)'
                        ],
                        borderColor: [
                            'rgba(255, 99, 132, 1)',
                            'rgba(54, 162, 235, 1)',
                            'rgba(255, 206, 86, 1)',
                            'rgba(75, 192, 192, 1)',
                            'rgba(153, 102, 255, 1)',
                            'rgba(255, 159, 64, 1)'
                        ],
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false
                }
            });

            // Bar Chart
            const barCtx = document.getElementById('specializationBarChart').getContext('2d');
            new Chart(barCtx, {
                type: 'bar',
                data: {
                    labels: labels,
                    datasets: [{
                        label: 'Number of Doctors',
                        data: counts,
                        backgroundColor: 'rgba(75, 192, 192, 0.2)',
                        borderColor: 'rgba(75, 192, 192, 1)',
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    scales: {
                        x: {
                            beginAtZero: true
                        },
                        y: {
                            beginAtZero: true
                        }
                    }
                }
            });
        }

        document.addEventListener('DOMContentLoaded', loadChartData);
    </script>
}
